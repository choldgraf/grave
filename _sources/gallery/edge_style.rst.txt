

.. _sphx_glr_gallery_edge_style.py:


GraVE Documentation
-------------------




.. code-block:: python

    import networkx as nx


    toy_network = nx.barbell_graph(10, 14)

    node_options = {
        'node_color': 'royalblue',
        'node_size': 50,
        'edgecolors': 'white',
    }

    edge_options = {
        'line_color': 'grey',
        'alpha': 0.7,
    }

    for u, v, edge_attributes in toy_network.edges.data():
        c = (toy_network.nodes[u]['value'] +
             toy_network.nodes[v]['value']) / 2
        edge_attributes['color'] = c


    def edge_style(edge_attributes):
        return {'linewidth': edge_attributes.get('weight', 1)}


    def use_attribute(k, dflt=None):
        def inner(node_attributes):
            return {k: node_attributes.get(k, dflt)}

        return inner


    # TODO add spec
    WHITELIST = {'color', 'linewidth'}


    def get_all_the_styles(attributes):
        return {k: v for k, v in attributes.items()
                if k in WHITELIST}


    plot_the_network_as_ball_and_stick(ax, toy_network,
                                       layout='spring',
                                       node_style=get_all_the_styles,
                                       edge_stlye=use_attribute('color'),
                                       node_labels=None,
                                       edge_labels=None,
                                       extra_artists=None)

**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: edge_style.py <edge_style.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: edge_style.ipynb <edge_style.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
